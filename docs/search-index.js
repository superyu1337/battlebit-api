var searchIndex = JSON.parse('{\
"battlebit_api":{"doc":"Battlebit-api","t":"NENNDNNNNNENNNNENNNENNNENNENNNDNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["America","AntiCheat","Asia","Australia","BBApi","Big","Brazil","CaptureTheFlag","Conquest","Day","DayNight","DeveloperServer","Domination","EasyAntiCheat","Elimination","Error","Europe","FreeForAll","Frontline","Gamemode","Gamemode19","InfanteryConquest","Japan","MapSize","Medium","Night","Region","Reqwest","Rush","SerdeJson","ServerData","Small","TeamDeathmatch","Tiny","Ultra","Unknown","Unknown","Unknown","Unknown","UrlParse","VoxelFortify","anti_cheat","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","day_night","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","gamemode","has_password","has_unknown","hz","into","into","into","into","into","into","into","into","is_official","map","map_size","max_players","name","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","player_count","queued_player_count","region","serialize","serialize","serialize","serialize","serialize","serialize","server_list","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_url"],"q":[[0,"battlebit_api"],[195,"alloc::string"],[196,"core::cmp"],[197,"core::result"],[198,"serde::de"],[199,"core::fmt"],[200,"core::fmt"],[201,"url::parser"],[202,"reqwest::error"],[203,"core::option"],[204,"serde::ser"],[205,"alloc::vec"],[206,"core::error"],[207,"core::any"],[208,"url"]],"d":["","","","","BattleBit API Struct","","","","","","","","","","","","","","","","Formely unknown gamemode, no idea what this exactly is atm.","","","","","","","","","","Data of a single server","","","","","","","","","","","Get field <code>anti_cheat</code> from instance of <code>ServerData</code>.","","","","","","","","","","","","","","","","","Get field <code>build</code> from instance of <code>ServerData</code>.","","","","","","","","","","","","","","","","","","Get field <code>day_night</code> from instance of <code>ServerData</code>.","Creates a new BBApi with the default URL Default URL is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get field <code>gamemode</code> from instance of <code>ServerData</code>.","Get field <code>has_password</code> from instance of <code>ServerData</code>.","Small check if this ServerData has <code>Unknown</code> fields. Mostly …","Get field <code>hz</code> from instance of <code>ServerData</code>. SAFETY: Unless …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get field <code>is_official</code> from instance of <code>ServerData</code>.","Get field <code>map</code> from instance of <code>ServerData</code>.","Get field <code>map_size</code> from instance of <code>ServerData</code>.","Get field <code>max_players</code> from instance of <code>ServerData</code>. SAFETY: …","Get field <code>name</code> from instance of <code>ServerData</code>.","Shorthand for <code>BBApi::Default()</code> Creates a new BBApi with …","","","","","","Get field <code>player_count</code> from instance of <code>ServerData</code>. …","Get field <code>queued_player_count</code> from instance of <code>ServerData</code>. …","Get field <code>region</code> from instance of <code>ServerData</code>.","","","","","","","Fetches the server list and puts it into a <code>Vec&lt;ServerData&gt;</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new BBApi with the given URL"],"i":[7,0,7,7,0,6,7,5,5,4,0,7,5,2,5,0,7,5,5,0,5,5,7,0,6,4,0,16,5,16,0,6,5,6,6,2,5,6,7,16,5,1,10,2,4,5,6,7,1,16,10,2,4,5,6,7,1,16,1,2,4,5,6,7,1,2,4,5,6,7,1,2,4,5,6,7,1,10,2,4,5,6,7,1,2,4,5,6,7,1,2,2,4,4,5,5,6,6,7,7,2,2,4,4,5,5,6,6,7,7,1,16,16,10,2,4,5,6,7,1,16,16,16,16,1,1,1,1,10,2,4,5,6,7,1,16,1,1,1,1,1,10,2,4,5,6,7,1,1,1,2,4,5,6,7,1,10,16,2,4,5,6,7,1,2,4,5,6,7,16,10,2,4,5,6,7,1,16,10,2,4,5,6,7,1,16,10,2,4,5,6,7,1,16,10],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,3],[2,2],[4,4],[5,5],[6,6],[7,7],[1,1],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[2,2],9],[[4,4],9],[[5,5],9],[[6,6],9],[[7,7],9],[1,4],[[],10],[-1,[[11,[2]]],12],[-1,[[11,[4]]],12],[-1,[[11,[5]]],12],[-1,[[11,[6]]],12],[-1,[[11,[7]]],12],[-1,[[11,[1]]],12],[[2,2],13],[[4,4],13],[[5,5],13],[[6,6],13],[[7,7],13],[[1,1],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[2,14],15],[[2,14],15],[[4,14],15],[[4,14],15],[[5,14],15],[[5,14],15],[[6,14],15],[[6,14],15],[[7,14],15],[[7,14],15],[[1,14],15],[[16,14],15],[[16,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[17,16],[18,16],[19,16],[1,5],[1,13],[1,13],[1,20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,13],[1,3],[1,6],[1,20],[1,3],[[],10],[[2,2],[[21,[9]]]],[[4,4],[[21,[9]]]],[[5,5],[[21,[9]]]],[[6,6],[[21,[9]]]],[[7,7],[[21,[9]]]],[1,20],[1,22],[1,7],[[2,-1],11,23],[[4,-1],11,23],[[5,-1],11,23],[[6,-1],11,23],[[7,-1],11,23],[[1,-1],11,23],[10,[[11,[[24,[1]],16]]]],[16,[[21,[25]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[27,10]],"c":[],"p":[[3,"ServerData",0],[4,"AntiCheat",0],[3,"String",195],[4,"DayNight",0],[4,"Gamemode",0],[4,"MapSize",0],[4,"Region",0],[15,"tuple"],[4,"Ordering",196],[3,"BBApi",0],[4,"Result",197],[8,"Deserializer",198],[15,"bool"],[3,"Formatter",199],[6,"Result",199],[4,"Error",0],[3,"Error",200],[4,"ParseError",201],[3,"Error",202],[15,"u8"],[4,"Option",203],[15,"u16"],[8,"Serializer",204],[3,"Vec",205],[8,"Error",206],[3,"TypeId",207],[3,"Url",208]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
